class Schema::InboundInvoiceSync < Lockstep::ApiRecord

# ApiRecord will crash unless `id_ref` is defined
def self.id_ref
  nil
end

  # Sync operation type whether it is read or write
  # @type: string
  field :operation_type

  # Required when submitting updates for an existing record.
  # @type: string
  # @format: uuid
  field :network_id

  # The id for this invoice supplied by the originating party.
  # @type: string
  field :invoice_reference_code

  # A code identifying the type of this invoice.
  #             
  # Recognized Invoice types are:
  # * `AR Invoice` - Represents an invoice sent by Company to the Customer
  # * `AP Invoice` - Represents an invoice sent by Vendor to the Company
  # * `AR Credit Memo` - Represents a credit memo generated by Company given to Customer
  # * `AP Credit Memo` - Represents a credit memo generated by Vendor given to Company
  # @type: string
  field :invoice_type

  # This flag Indicates if this invoice is E-invoice.
  # When True, all fields other than erpKey, companyERPKey, and customerERPKey become optional.
  # Model most also contain at least one e-invoice file type.
  # @type: boolean
  field :is_e_invoice

  # File Data model is child model for Invoice and InvoiceInboundSync model represents file name and file path.
  # This model is use for EInvoice request.
  # For more information on writing your own connector, see [Connector Data](https://developer.lockstep.io/docs/connector-data).
  field :attachments

  # The network id of the related Company.
  # @type: string
  # @format: uuid
  field :customer_network_id

  # The total value of this invoice, inclusive of all taxes and line items.
  # @type: number
  # @format: double
  field :total_amount

  # The three-character ISO 4217 currency code used for this invoice.
  # @type: string
  field :currency_code

  # The reporting date for this invoice in "YYYY-MM-DD" format.
  # @type: string
  # @format: date-time
  field :invoice_date, Types::Params::DateTime

  # The date on which this invoice record was created.
  # @type: string
  # @format: date-time
  field :created, Types::Params::DateTime

  # Flags if this invoice request isto be posted as a draft
  # @type: boolean
  field :is_draft

  # The department this line item belongs to.
  # @type: string
  field :department_erp_key

  # Description of this invoice line.
  # @type: string
  field :description

  # The total discounts given by the seller to the buyer on this invoice.
  # @type: number
  # @format: double
  field :discount_amount

  # The remaining balance value of this invoice.
  # @type: number
  # @format: double
  field :outstanding_balance_amount

  # The date when the remaining outstanding balance is due in "YYYY-MM-DD" format.
  # @type: string
  # @format: date-time
  field :payment_due_date, Types::Params::DateTime

  # The payment priority level for this invoice.
  # @type: string
  field :payment_priority

  # The "Purchase Order Code" is a code that is sometimes used by companies to refer to the original PO
  # that was sent that caused this invoice to be written.  If a customer sends a purchase order to a vendor,
  # the vendor can then create an invoice and refer back to the originating purchase order using this field.
  # @type: string
  field :purchase_order_code

  # An additional reference code that is sometimes used to identify this invoice.
  # The meaning of this field is specific to the ERP or accounting system used by the user.
  # @type: string
  field :reference_code

  # A code identifying the salesperson responsible for writing this invoice.
  # @type: string
  field :sales_person_code

  # The total sales (or transactional) tax calculated for this invoice.
  # @type: number
  # @format: double
  field :sales_tax_amount

  # The name of the billing terms for this invoice.
  # @type: string
  field :term_name

  # Sync time
  # @type: string
  # @format: date-time
  field :timestamp, Types::Params::DateTime

  # Last Sync time
  # @type: string
  # @format: date-time
  field :last_attempted, Types::Params::DateTime

  # Erp write status
  # @type: string
  field :status

  # Erp write status message
  # @type: string
  field :message

  # When true, indicates that invoice should be immediately sent to customer via designated channel.
  # Intended for use by e-Invoices.
  # @type: boolean
  field :send_immediately


  has_many :lines, {:class_name=>"Schema::InboundSyncInvoiceLines", :included=>true}

end